(*******************************************************************************)
(*  Volgo - a Versatile OCaml Library for Git Operations                       *)
(*  Copyright (C) 2024-2025 Mathieu Barbin <mathieu.barbin@gmail.com>          *)
(*                                                                             *)
(*  This file is part of Volgo.                                                *)
(*                                                                             *)
(*  Volgo is free software; you can redistribute it and/or modify it under     *)
(*  the terms of the GNU Lesser General Public License as published by the     *)
(*  Free Software Foundation either version 3 of the License, or any later     *)
(*  version, with the LGPL-3.0 Linking Exception.                              *)
(*                                                                             *)
(*  Volgo is distributed in the hope that it will be useful, but WITHOUT ANY   *)
(*  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS  *)
(*  FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License and    *)
(*  the file `NOTICE.md` at the root of this repository for more details.      *)
(*                                                                             *)
(*  You should have received a copy of the GNU Lesser General Public License   *)
(*  and the LGPL-3.0 Linking Exception along with this library. If not, see    *)
(*  <http://www.gnu.org/licenses/> and <https://spdx.org>, respectively.       *)
(*******************************************************************************)

let%expect_test "mock revs" =
  let t = Vcs.Mock_revs.create () in
  (* Revisions generated are deterministic and stable for use in tests. *)
  print_s [%sexp (Vcs.Mock_revs.next t : Vcs.Rev.t)];
  [%expect {| 1185512b92d612b25613f2e5b473e5231185512b |}];
  print_s [%sexp (Vcs.Mock_revs.next t : Vcs.Rev.t)];
  [%expect {| f452a6f91ee8f448bd58bbd0f3330675f452a6f9 |}];
  (* This part of the test is a bit confusing, because we are simulating a
     binding between mock revs and actual revs, but since we are not in a git
     repo, the revs that we use as actual revs are also generated by the mock
     generator. *)
  let rev0 = Vcs.Mock_revs.next t in
  let mock_rev0 = Vcs.Mock_revs.next t in
  (* If a mock revision is not known, the lookup returns [None]. *)
  print_s [%sexp (Vcs.Mock_revs.of_mock t ~mock_rev:mock_rev0 : Vcs.Rev.t option)];
  [%expect {| () |}];
  (* Now let's bind it to an actual revision. *)
  Vcs.Mock_revs.add_exn t ~rev:rev0 ~mock_rev:mock_rev0;
  print_s [%sexp (Vcs.Mock_revs.of_mock t ~mock_rev:mock_rev0 : Vcs.Rev.t option)];
  [%expect {| (dd5aabd331a75b90cd61725223964e47dd5aabd3) |}];
  (* Attempting to add it again will fail. *)
  let mock_rev1 = Vcs.Mock_revs.next t in
  require_does_raise [%here] (fun () ->
    Vcs.Mock_revs.add_exn t ~rev:rev0 ~mock_rev:mock_rev1);
  [%expect
    {|
    ("Hashtbl.add_exn: key already present" ((
      key dd5aabd331a75b90cd61725223964e47dd5aabd3)))
    |}];
  (* Finally, as a convenience we can generate mock revision on the fly with
     [to_mock]. *)
  let rev1 = Vcs.Mock_revs.next t in
  let rev2 = Vcs.Mock_revs.next t in
  let rev3 = Vcs.Mock_revs.next t in
  let mock_rev1 = Vcs.Mock_revs.to_mock t ~rev:rev1 in
  let mock_rev2 = Vcs.Mock_revs.to_mock t ~rev:rev2 in
  let mock_rev3 = Vcs.Mock_revs.to_mock t ~rev:rev3 in
  print_s [%sexp (mock_rev1 : Vcs.Rev.t)];
  [%expect {| a6d2cfe8358a69c9600ab905ad0435f0a6d2cfe8 |}];
  print_s [%sexp (mock_rev2 : Vcs.Rev.t)];
  [%expect {| c3b38f60e7a423283dede1e7a598b378c3b38f60 |}];
  print_s [%sexp (mock_rev3 : Vcs.Rev.t)];
  [%expect {| 43ba44a5d1aa1704c5c4768aac828c4343ba44a5 |}];
  (* And naturally, lookup again the same revs returns the same mock revs. *)
  require_equal [%here] (module Vcs.Rev) mock_rev1 (Vcs.Mock_revs.to_mock t ~rev:rev1);
  require_equal [%here] (module Vcs.Rev) mock_rev2 (Vcs.Mock_revs.to_mock t ~rev:rev2);
  require_equal [%here] (module Vcs.Rev) mock_rev3 (Vcs.Mock_revs.to_mock t ~rev:rev3);
  [%expect {||}];
  ()
;;
